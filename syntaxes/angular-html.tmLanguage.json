{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "angular-html",
    "scopeName": "text.html.html",
    "patterns": [
        {
            "include": "#angular-directives",
            "captures": {
                "0": {
                    "name": "punctuation.definition.tag.html"
                }
            },
            "begin": "<!",
            "end": ">",
            "name": "meta.tag.sgml.html",
            "patterns": [
                {
                    "captures": {
                        "1": {
                            "name": "entity.name.tag.doctype.html"
                        }
                    },
                    "begin": "(?i:DOCTYPE|doctype)",
                    "end": "(?=>)",
                    "name": "meta.tag.sgml.doctype.html",
                    "patterns": [
                        {
                            "match": "\"[^\">]*\"",
                            "name": "string.quoted.double.doctype.identifiers-and-DTDs.html"
                        }
                    ]
                }
            ]
        },
        {
            "include": "#angular-interpolations",
            "beginCaptures": {
                "1": {
                    "name": "punctuation.definition.tag.begin.html"
                },
                "2": {
                    "name": "entity.name.tag.block.any.html"
                }
            },
            "patterns": [
                {
                    "include": "#tag-stuff"
                }
            ],
            "begin": "(</?)((?i:template|ng-template|ng-container)[a-zA-Z0-9:-]+\\b)",
            "endCaptures": {
                "1": {
                    "name": "punctuation.definition.tag.end.html"
                }
            },
            "end": "(>)",
            "name": "meta.tag.block.any.html"
        },
        {
            "include": "#comment",
            "beginCaptures": {
                "1": {
                    "name": "punctuation.definition.tag.begin.html"
                },
                "2": {
                    "name": "entity.name.tag.style.html"
                }
            },
            "begin": "(<)(template|ng-template|ng-container)\\b(?=[^/>]*/>\\s*$)",
            "endCaptures": {
                "1": {
                    "name": "punctuation.definition.tag.end.html"
                }
            },
            "end": "(/>)",
            "patterns": [
                {
                    "include": "#tag-stuff"
                }
            ]
        },
        {
            "include": "#constant",
            "beginCaptures": {
                "1": {
                    "name": "punctuation.definition.tag.begin.html"
                },
                "2": {
                    "name": "entity.name.tag.style.html"
                }
            },
            "begin": "(<)(template|ng-template|ng-container)",
            "endCaptures": {
                "1": {
                    "name": "punctuation.definition.tag.begin.html"
                },
                "2": {
                    "name": "entity.name.tag.style.html"
                },
                "3": {
                    "name": "punctuation.definition.tag.end.html"
                }
            },
            "end": "(</)(template|ng-template|ng-container)(>)",
            "patterns": [
                {
                    "include": "#tag-stuff"
                },
                {
                    "beginCaptures": {
                        "1": {
                            "name": "punctuation.definition.tag.end.html"
                        }
                    },
                    "begin": "(>)",
                    "end": "(?=</template|ng-template|ng-container>)",
                    "patterns": [
                        {
                            "include": "text.html.html"
                        }
                    ],
                    "contentName": "text.html.html"
                }
            ]
        },
        {
            "include": "#entity",
            "captures": {
                "1": {
                    "name": "punctuation.definition.tag.begin.html"
                },
                "2": {
                    "name": "entity.name.tag.structure.any.html"
                }
            },
            "patterns": [
                {
                    "include": "#tag-stuff"
                }
            ],
            "begin": "(</?)((?i:body|head|html)\\b)",
            "endCaptures": {
                "1": {
                    "name": "punctuation.definition.tag.end.html"
                }
            },
            "end": "(>)",
            "name": "meta.tag.structure.any.html"
        },
        {
            "include": "#keyword",
            "beginCaptures": {
                "1": {
                    "name": "punctuation.definition.tag.begin.html"
                },
                "2": {
                    "name": "entity.name.tag.block.any.html"
                }
            },
            "patterns": [
                {
                    "include": "#tag-stuff"
                }
            ],
            "begin": "(</?)((?i:address|blockquote|dd|div|dl|dt|fieldset|form|frame|frameset|h1|h2|h3|h4|h5|h6|iframe|noframes|object|ol|p|ul|applet|center|dir|hr|menu|pre)(?!-)\\b)",
            "endCaptures": {
                "1": {
                    "name": "punctuation.definition.tag.end.html"
                }
            },
            "end": "(>)",
            "name": "meta.tag.block.any.html"
        },
        {
            "include": "#meta",
            "beginCaptures": {
                "1": {
                    "name": "punctuation.definition.tag.begin.html"
                },
                "2": {
                    "name": "entity.name.tag.inline.any.html"
                }
            },
            "patterns": [
                {
                    "include": "#tag-stuff"
                }
            ],
            "begin": "(</?)((?i:a|abbr|acronym|area|b|base|basefont|bdo|big|br|button|caption|cite|code|col|colgroup|del|dfn|em|font|head|html|i|img|input|ins|isindex|kbd|label|legend|li|link|map|meta|noscript|optgroup|option|param|q|s|samp|script|select|small|span|strike|strong|style|sub|sup|table|tbody|td|textarea|tfoot|th|thead|title|tr|tt|u|var)(?!-)\\b)",
            "endCaptures": {
                "1": {
                    "name": "punctuation.definition.tag.end.html"
                }
            },
            "end": "(/?>)",
            "name": "meta.tag.inline.any.html"
        },
        {
            "include": "#operator",
            "beginCaptures": {
                "1": {
                    "name": "punctuation.definition.tag.begin.html"
                },
                "2": {
                    "name": "entity.name.tag.other.html"
                }
            },
            "patterns": [
                {
                    "include": "#tag-stuff"
                }
            ],
            "begin": "(</?)([a-zA-Z0-9:-]+)",
            "endCaptures": {
                "1": {
                    "name": "punctuation.definition.tag.end.html"
                }
            },
            "end": "(/?>)",
            "name": "meta.tag.other.html"
        },
        {
            "include": "#entities"
        },
        {
            "include": "#regex",
            "match": "<>",
            "name": "invalid.illegal.incomplete.html"
        },
        {
            "include": "#tag-deprecated",
            "match": "<",
            "name": "invalid.illegal.bad-angle-bracket.html"
        },
        {
            "include": "#string"
        },
        {
            "include": "#tag-events-attribute"
        },
        {
            "include": "#tag-opening-closing"
        },
        {
            "include": "#tag-generic-attribute"
        },
        {
            "include": "#tag-stuff"
        }
    ],
    "repository": {
        "angular-directives": {
            "captures": {
                "1": {
                    "name": "string.regexp"
                },
                "4": {
                    "name": "entity.other.attribute-name.html"
                },
                "7": {
                    "name": "string.regexp"
                }
            },
            "begin": "((?:\\b(v-)|(\\*|\\#|[\\[\\(]{1,2}))([a-zA-Z0-9\\-]+)(?:\\:([a-zA-Z0-9\\-]+))?(?:\\.([a-zA-Z0-9\\-]+))*)([\\]\\)]{1,2})?\\s*(?==?)",
            "end": "(?<='|\")|(?=[\\s<>`])",
            "name": "meta.directive.angular",
            "patterns": [
                {
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.begin.html"
                        }
                    },
                    "patterns": [
                        {
                            "include": "source.js#expression"
                        }
                    ],
                    "begin": "\"",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.end.html"
                        }
                    },
                    "end": "\"",
                    "name": "source.directive.angular"
                },
                {
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.begin.html"
                        }
                    },
                    "patterns": [
                        {
                            "include": "source.js#expression"
                        }
                    ],
                    "begin": "'",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.end.html"
                        }
                    },
                    "end": "'",
                    "name": "source.directive.angular"
                }
            ]
        },
        "angular-interpolations": {
            "patterns": [
                {
                    "beginCaptures": {
                        "0": {
                            "name": "string.regexp.interpolation.begin"
                        }
                    },
                    "patterns": [
                        {
                            "include": "source.js#expression"
                        }
                    ],
                    "begin": "\\{\\{\\{?",
                    "endCaptures": {
                        "0": {
                            "name": "string.regexp.interpolation.end"
                        }
                    },
                    "end": "\\}\\}\\}?",
                    "name": "expression.embedded.angular"
                }
            ]
        },
        "comment": {
            "patterns": [
                {
                    "name": "comment.block.html",
                    "begin": "<!--",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.definition.comment.begin.html"
                        }
                    },
                    "end": "-->",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.definition.comment.end.html"
                        }
                    },
                    "patterns": [
                        {
                            "include": "#comment"
                        }
                    ]
                }
            ]
        },
        "constant": {
            "patterns": []
        },
        "entities": {
            "patterns": [
                {
                    "captures": {
                        "1": {
                            "name": "punctuation.definition.entity.html"
                        },
                        "3": {
                            "name": "punctuation.definition.entity.html"
                        }
                    },
                    "match": "(&)([a-zA-Z0-9]+|#[0-9]+|#x[0-9a-fA-F]+)(;)",
                    "name": "constant.character.entity.html"
                },
                {
                    "match": "&",
                    "name": "invalid.illegal.bad-ampersand.html"
                }
            ]
        },
        "keyword": {
            "patterns": []
        },
        "meta": {
            "patterns": []
        },
        "operator": {
            "patterns": []
        },
        "punctuation": {
            "patterns": []
        },
        "string-single-quoted": {
            "beginCaptures": {
                "0": {
                    "name": "punctuation.definition.string.begin.html"
                }
            },
            "patterns": [
                {
                    "include": "#angular-interpolations"
                },
                {
                    "include": "#entities"
                }
            ],
            "begin": "'",
            "endCaptures": {
                "0": {
                    "name": "punctuation.definition.string.end.html"
                }
            },
            "end": "'",
            "name": "string.quoted.single.html"
        },
        "string-double-quoted": {
            "beginCaptures": {
                "0": {
                    "name": "punctuation.definition.string.begin.html"
                }
            },
            "patterns": [
                {
                    "include": "#angular-interpolations"
                },
                {
                    "include": "#entities"
                }
            ],
            "begin": "\"",
            "endCaptures": {
                "0": {
                    "name": "punctuation.definition.string.end.html"
                }
            },
            "end": "\"",
            "name": "string.quoted.double.html"
        },
        "regex": {
            "match": "/([a-zA-Z0-9\\[\\]\\(\\)\\*\\+\\-\\^\\~\\:\\/\\;\\.\\,\\{\\}\\@\\\"\\\\]+)/([nsxAgimuY]*+?)",
            "name": "string.regexp",
            "patterns": []
        },
        "unquoted-attribute": {
            "match": "(?<==)(?:[^\\s<>/'\"]|/(?!>))+",
            "name": "string.unquoted.html",
            "patterns": []
        },
        "tag-deprecated": {
            "match": ">?<\\/?(acronym|applet|basefont|big|center|dir|font|frame|frameset|isindex|noframes|s|strike|tt|u)([\\n\\s\\r>\\=\\\"]+?)([\\s\\n\\r\\=\\\">])?",
            "name": "invalid.deprecated",
            "patterns": []
        },
        "tag-events-attribute": {
            "captures": {
                "1": {
                    "name": "entity.other.attribute-name.events.html"
                }
            },
            "begin": "(DOMMenuItemActive|DOMMenuItemInactive|DOMMouseScroll|onabort|onafterprint|onafterupdate|onbeforecopy|onbeforecut|onbeforeeditfocus|onbeforepaste|onbeforeprint|onbeforeunload|onbeforeupdate|onblur|onbounce|onbroadcast|oncanplay|oncanplaythrough|oncellchange|onchange|onclick|onclose|oncommand|oncommandupdate|oncontextmenu|oncopy|oncut|ondataavailable|ondatasetchanged|ondatasetcomplete|ondblclick|ondrag|ondragdrop|ondragend|ondragenter|ondragexit|ondraggesture|ondragleave|ondragover|ondragstart|ondrop|ondurationchange|onemptied|onended|onerror|onerrorupdate|onfilterchange|onfinish|onfocus|onformchange|onforminput|ongotpointercapture|onhelp|oninput|oninvalid|onkeydown|onkeypress|onkeyup|onload|onloadeddata|onloadedmetadata|onloadstart|onlosecapture|onlostpointercapture|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|onmousewheel|onoverflow|onoverflowchanged|onpaste|onpause|onplay|onplaying|onpointercancel|onpointerdown|onpointerenter|onpointerleave|onpointermove|onpointerout|onpointerover|onpointerup|onpopuphidden|onpopuphiding|onpopupshowing|onpopupshown|onprogress|onpropertychange|onratechange|onreadystatechange|onreset|onresize|onrowenter|onrowexit|onrowinserted|onrowsdelete|onscroll|onseeked|onseeking|onselect|onselectstart|onshow|onstalled|onstart|onstop|onsubmit|onsuspend|ontimeupdate|onunderflow|onunload|onvolumechange|onwaiting)+(=)",
            "end": "(?<='|\")|(?=[\\s<>`])",
            "name": "meta.attribute-with-value.events.html",
            "patterns": [
                {
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.begin.html"
                        }
                    },
                    "patterns": [
                        {
                            "include": "source.js#expression"
                        }
                    ],
                    "begin": "\"",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.end.html"
                        }
                    },
                    "end": "\"",
                    "name": "source.events.html"
                },
                {
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.begin.html"
                        }
                    },
                    "patterns": [
                        {
                            "include": "source.js#expression"
                        }
                    ],
                    "begin": "'",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.end.html"
                        }
                    },
                    "end": "'",
                    "name": "source.events.html"
                }
            ]
        },
        "tag-generic-attribute": {
            "name": "entity.other.attribute-name",
            "captures": {
                "1": {
                    "name": "entity.other.attribute-name.generic.html"
                }
            },
            "match": "(?!\\b(DOMMenuItemActive|DOMMenuItemInactive|DOMMouseScroll|onabort|onafterprint|onafterupdate|onbeforecopy|onbeforecut|onbeforeeditfocus|onbeforepaste|onbeforeprint|onbeforeunload|onbeforeupdate|onblur|onbounce|onbroadcast|oncanplay|oncanplaythrough|oncellchange|onchange|onclick|onclose|oncommand|oncommandupdate|oncontextmenu|oncopy|oncut|ondataavailable|ondatasetchanged|ondatasetcomplete|ondblclick|ondrag|ondragdrop|ondragend|ondragenter|ondragexit|ondraggesture|ondragleave|ondragover|ondragstart|ondrop|ondurationchange|onemptied|onended|onerror|onerrorupdate|onfilterchange|onfinish|onfocus|onformchange|onforminput|ongotpointercapture|onhelp|oninput|oninvalid|onkeydown|onkeypress|onkeyup|onload|onloadeddata|onloadedmetadata|onloadstart|onlosecapture|onlostpointercapture|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|onmousewheel|onoverflow|onoverflowchanged|onpaste|onpause|onplay|onplaying|onpointercancel|onpointerdown|onpointerenter|onpointerleave|onpointermove|onpointerout|onpointerover|onpointerup|onpopuphidden|onpopuphiding|onpopupshowing|onpopupshown|onprogress|onpropertychange|onratechange|onreadystatechange|onreset|onresize|onrowenter|onrowexit|onrowinserted|onrowsdelete|onscroll|onseeked|onseeking|onselect|onselectstart|onshow|onstalled|onstart|onstop|onsubmit|onsuspend|ontimeupdate|onunderflow|onunload|onvolumechange|onwaiting)\\b)\\b\\w+(?==)",
            "patterns": []
        },
        "tag-opening-closing": {
            "name": "entity.name.tag",
            "captures": {
                "2": {
                    "name": "entity.name.tag.begin.html"
                },
                "3": {
                    "name": "entity.name.tag.end.html"
                }
            },
            "match": "((<\\/?)[a-zA-Z0-9\\-]++*>?)|\\/?>",
            "patterns": []
        },
        "tag-stuff": {
            "patterns": [
                {
                    "include": "#angular-directives"
                },
                {
                    "include": "#tag-generic-attribute"
                },
                {
                    "include": "#tag-events-attribute"
                },
                {
                    "include": "#string-double-quoted"
                },
                {
                    "include": "#string-single-quoted"
                },
                {
                    "include": "#unquoted-attribute"
                }
            ]
        }
    }
}