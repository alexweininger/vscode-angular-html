{
  repository: {
    "field-declaration": {
			"name": "meta.field.declaration.ts",
			"begin": "(?<!\\()(?:(?<!\\.|\\$)\\b(readonly)\\s+)?(?=(([_$[:alpha:]][_$[:alnum:]]*)|(\\'[^']*\\')|(\\\"[^\"]*\\\")|(\\[([^\\[\\]]|\\[[^\\[\\]]+\\])+\\]))\\s*(\\?\\s*)?(=|:))",
			"beginCaptures": {
				"1": {
					"name": "storage.modifier.ts"
				}
			},
			"end": "(?=\\}|;|,|$|\")|(?<=\\})",
			"patterns": [
				{
					"include": "#variable-initializer"
				},
				{
					"begin": "(?=((?:[_$[:alpha:]][_$[:alnum:]]*)|(?:\\'[^']*\\')|(?:\\\"[^\"]*\\\")|(\\[([^\\[\\]]|\\[[^\\[\\]]+\\])+\\]))\\s*(\\?\\s*)?(=|:))",
					"end": "(?=[};,=]|$|\")|(?<=\\})",
					"patterns": [
						{
							"include": "#type-annotation"
						},
            {
              "include": "#ts-string"
            },
						{
							"include": "#array-literal"
						},
						{
							"name": "entity.name.function.ts",
							"match": "(?x)([_$[:alpha:]][_$[:alnum:]]*)(?=(\\?\\s*)?\\s* (=\\s*( (async\\s+) | (function\\s*[(<]) | (function\\s+) | ([_$[:alpha:]][_$[:alnum:]]*\\s*=>) | ((<([^<>]|\\<[^<>]+\\>)+>\\s*)?\\(([^()]|\\([^()]*\\))*\\)(\\s*:\\s*(.)*)?\\s*=>)) ) | (:\\s*( (<) | ([(]\\s*( ([)]) | (\\.\\.\\.) | ([_$[:alnum:]]+\\s*( ([:,?=])| ([)]\\s*=>) )) ))) ))"
						},
						{
							"name": "variable.object.property.ts",
							"match": "[_$[:alpha:]][_$[:alnum:]]*"
						},
						{
							"name": "keyword.operator.optional.ts",
							"match": "\\?"
						}
					]
				}
			]
		}
  }
}