{
  repository: {
    "object-member": {
			"patterns": [
				{
					"include": "#method-declaration"
				},
				{
					"name": "meta.object.member.ts",
					"begin": "(?=(?:(?:\\'[^']*\\')|(?:\\\"[^\"]*\\\")|(?:\\[([^\\[\\]]|\\[[^\\[\\]]+\\])+\\]))\\s*:)",
					"end": "(?=,|\\})",
					"patterns": [
						{
							"name": "meta.object-literal.key.ts",
							"begin": "(?=(?:(?:\\'[^']*\\')|(?:\\\"[^\"]*\\\")|(?:\\[([^\\[\\]]|\\[[^\\[\\]]+\\])+\\]))\\s*:)",
							"end": ":",
							"endCaptures": {
								"0": {
									"name": "punctuation.separator.key-value.ts"
								}
							},
							"patterns": [
                {
                  "include": "#ts-string"
                },
								{
									"include": "#array-literal"
								}
							]
						},
						{
							"include": "#expression"
						}
					]
				},
				{
					"name": "meta.object.member.ts",
					"begin": "(?x)(?:([_$[:alpha:]][_$[:alnum:]]*)\\s*(:)(?=\\s*( (async\\s+)|(function\\s*[(<])|(function\\s+)| ([_$[:alpha:]][_$[:alnum:]]*\\s*=>)| ((<([^<>]|\\<[^<>]+\\>)+>\\s*)?\\(([^()]|\\([^()]*\\))*\\)(\\s*:\\s*(.)*)?\\s*=>))))",
					"beginCaptures": {
						"0": {
							"name": "meta.object-literal.key.ts"
						},
						"1": {
							"name": "entity.name.function.ts"
						},
						"2": {
							"name": "punctuation.separator.key-value.ts"
						}
					},
					"end": "(?=,|\\})",
					"patterns": [
						{
							"include": "#expression"
						}
					]
				},
				{
					"name": "meta.object.member.ts",
					"begin": "(?:[_$[:alpha:]][_$[:alnum:]]*)\\s*(:)",
					"beginCaptures": {
						"0": {
							"name": "meta.object-literal.key.ts"
						},
						"1": {
							"name": "punctuation.separator.key-value.ts"
						}
					},
					"end": "(?=,|\\})",
					"patterns": [
						{
							"include": "#expression"
						}
					]
				},
				{
					"name": "meta.object.member.ts",
					"begin": "\\.\\.\\.",
					"beginCaptures": {
						"0": {
							"name": "keyword.operator.spread.ts"
						}
					},
					"end": "(?=,|\\})",
					"patterns": [
						{
							"include": "#expression"
						}
					]
				},
				{
					"name": "meta.object.member.ts",
					"match": "([_$[:alpha:]][_$[:alnum:]]*)\\s*(?=,|\\}|$)",
					"captures": {
						"1": {
							"name": "variable.other.readwrite.ts"
						}
					}
				},
				{
					"include": "#punctuation-comma"
				}
			]
		}
  }
}